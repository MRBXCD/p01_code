/root/miniconda3/envs/p01/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/root/miniconda3/envs/p01/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loaded training data from: /root/autodl-tmp/shared_data/projection/raw/Projection_train_data_16_angles_padded.npz
Loaded val data from: /root/autodl-tmp/shared_data/projection/raw/Projection_val_data_16_angles_padded.npz
Train data information:
Caution: Max value of input data is 46.328514099121094, do data normalization
Now is projection model, only the input data will be loaded, the target will be created automatically
---------------------------------------------
Caution: Max value of input data is 40.22502899169922, do data normalization
Now is projection model, only the input data will be loaded, the target will be created automatically
---------------------------------------------
Data shuffled
-------Train From Beginning-------
Traceback (most recent call last):
  File "/root/autodl-tmp/p01_code/projection_predict/main.py", line 81, in <module>
    main()
  File "/root/autodl-tmp/p01_code/projection_predict/main.py", line 76, in main
    model_train.train()
  File "/root/autodl-tmp/p01_code/projection_predict/trainer.py", line 426, in train
    metric_train = self.train_epoch(epoch + 1)
  File "/root/autodl-tmp/p01_code/projection_predict/trainer.py", line 244, in train_epoch
    loss = self.loss_fn(predict, target)
  File "/root/miniconda3/envs/p01/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/root/miniconda3/envs/p01/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/root/autodl-tmp/p01_code/projection_predict/loss_method.py", line 54, in forward
    perceptual = self.perceptual_loss(y_pred, y_true)
  File "/root/miniconda3/envs/p01/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/root/miniconda3/envs/p01/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/root/autodl-tmp/p01_code/projection_predict/loss_method.py", line 29, in forward
    x_pred = layer(x_pred)
  File "/root/miniconda3/envs/p01/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/root/miniconda3/envs/p01/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/root/miniconda3/envs/p01/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 554, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/root/miniconda3/envs/p01/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 549, in _conv_forward
    return F.conv2d(
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 344.00 MiB. GPU 0 has a total capacity of 23.65 GiB of which 188.06 MiB is free. Process 988492 has 23.46 GiB memory in use. Of the allocated memory 22.78 GiB is allocated by PyTorch, and 241.67 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
